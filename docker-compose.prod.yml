version: '2.2'
services:
  db:
    restart: always
    image: postgres:10-alpine
    ports:
      - "${POSTGRES_EXTERNAL_PORT:-5432}:5432"
    volumes:
     - db-data:/var/lib/postgresql/data
    env_file: .env

  redis:
    restart: always
    image: redis:4.0
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-password}
    ports:
      - "${REDIS_EXTERNAL_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    env_file: .env

  rabbit:
    restart: always
    image: rabbitmq:3.6-management-alpine
    ports:
      - "${RABBITMQ_EXTERNAL_PORT:-5672}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT:-15672}:15672"
    volumes:
      - rabbit-data:/var/lib/rabbitmq
    env_file: .env

  worker:
    restart: always
    build:
      context: .
      dockerfile: docker/python/Dockerfile.prod
    image: python:library-prod
    command: run_worker.sh
    links:
      - db
      - rabbit
      - redis
    depends_on:
      - rabbit
    env_file: .env
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbit
      - RABBITMQ_PORT=5672

  backend:
    restart: always
    build:
      context: .
      dockerfile: docker/python/Dockerfile.prod
    image: python:library-prod
    command: run_web.sh
    ports:
      - "${BACKEND_WEB_PORT:-8000}:8000"
      - "${BACKEND_DEBUG_PORT:-3000}:3000"
    volumes:
      - static-files:/usr/src/app/static
    links:
      - db
      - rabbit
      - redis
    depends_on:
      - db
      - redis
    env_file: .env
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbit
      - RABBITMQ_PORT=5672

  frontend:
    restart: always
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
      args:
        - FRONTEND_ADMIN_EMAIL=${FRONTEND_ADMIN_EMAIL}
        - RECAPTCHA_SITE_KEY=${RECAPTCHA_SITE_KEY}
    image: nginx:library
    ports:
      - "${FRONTEND_WEB_PORT:-80}:80"
      - "${FRONTEND_SSL_PORT:-443}:443"
    volumes:
      - static-files:/usr/src/app/static
      - "${FRONTEND_SSL_PATH:-./certs}:/etc/certs"
    links:
      - backend
    env_file: .env

volumes:
  db-data:
  redis-data:
  rabbit-data:
  static-files:
